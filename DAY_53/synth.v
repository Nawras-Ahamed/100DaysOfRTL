/* Generated by Yosys 0.9 (git sha1 UNKNOWN, clang 3.4.2 -fPIC -Os) */

(* dynports =  1  *)
(* src = "design.sv:2" *)
module dual_port_ram(data_a, data_b, addr_a, addr_b, we_a, we_b, clk, q_a, q_b);
  (* src = "design.sv:11" *)
  wire [6:0] _000_;
  (* src = "design.sv:11" *)
  wire [16:0] _001_;
  (* src = "design.sv:23" *)
  wire [6:0] _002_;
  (* src = "design.sv:23" *)
  wire [16:0] _003_;
  (* src = "design.sv:11" *)
  wire [15:0] _004_;
  (* src = "design.sv:23" *)
  wire [15:0] _005_;
  (* src = "design.sv:19" *)
  wire _006_;
  (* src = "design.sv:19" *)
  wire _007_;
  (* src = "design.sv:19" *)
  wire _008_;
  (* src = "design.sv:19" *)
  wire _009_;
  (* src = "design.sv:19" *)
  wire _010_;
  (* src = "design.sv:19" *)
  wire _011_;
  (* src = "design.sv:19" *)
  wire _012_;
  (* src = "design.sv:19" *)
  wire _013_;
  (* src = "design.sv:19" *)
  wire _014_;
  (* src = "design.sv:19" *)
  wire _015_;
  (* src = "design.sv:19" *)
  wire _016_;
  (* src = "design.sv:19" *)
  wire _017_;
  (* src = "design.sv:19" *)
  wire _018_;
  (* src = "design.sv:19" *)
  wire _019_;
  (* src = "design.sv:19" *)
  wire _020_;
  (* src = "design.sv:19" *)
  wire _021_;
  (* src = "design.sv:31" *)
  wire _022_;
  (* src = "design.sv:31" *)
  wire _023_;
  (* src = "design.sv:31" *)
  wire _024_;
  (* src = "design.sv:31" *)
  wire _025_;
  (* src = "design.sv:31" *)
  wire _026_;
  (* src = "design.sv:31" *)
  wire _027_;
  (* src = "design.sv:31" *)
  wire _028_;
  (* src = "design.sv:31" *)
  wire _029_;
  (* src = "design.sv:31" *)
  wire _030_;
  (* src = "design.sv:31" *)
  wire _031_;
  (* src = "design.sv:31" *)
  wire _032_;
  (* src = "design.sv:31" *)
  wire _033_;
  (* src = "design.sv:31" *)
  wire _034_;
  (* src = "design.sv:31" *)
  wire _035_;
  (* src = "design.sv:31" *)
  wire _036_;
  (* src = "design.sv:31" *)
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  (* src = "design.sv:19" *)
  (* unused_bits = "16" *)
  wire [16:0] _118_;
  (* src = "design.sv:31" *)
  (* unused_bits = "16" *)
  wire [16:0] _119_;
  (* src = "design.sv:4" *)
  input [5:0] addr_a;
  (* src = "design.sv:4" *)
  input [5:0] addr_b;
  (* src = "design.sv:5" *)
  input clk;
  (* src = "design.sv:3" *)
  input [16:0] data_a;
  (* src = "design.sv:3" *)
  input [16:0] data_b;
  (* src = "design.sv:6" *)
  output [15:0] q_a;
  (* src = "design.sv:6" *)
  output [15:0] q_b;
  (* src = "design.sv:5" *)
  input we_a;
  (* src = "design.sv:5" *)
  input we_b;
  NOT _120_ (
    .A(we_b),
    .Y(_038_)
  );
  NOT _121_ (
    .A(we_a),
    .Y(_039_)
  );
  NAND _122_ (
    .A(data_b[8]),
    .B(we_b),
    .Y(_040_)
  );
  NOT _123_ (
    .A(_040_),
    .Y(_003_[8])
  );
  NAND _124_ (
    .A(we_b),
    .B(data_b[9]),
    .Y(_041_)
  );
  NOT _125_ (
    .A(_041_),
    .Y(_003_[9])
  );
  NAND _126_ (
    .A(we_b),
    .B(data_b[10]),
    .Y(_042_)
  );
  NOT _127_ (
    .A(_042_),
    .Y(_003_[10])
  );
  NAND _128_ (
    .A(we_b),
    .B(data_b[11]),
    .Y(_043_)
  );
  NOT _129_ (
    .A(_043_),
    .Y(_003_[11])
  );
  NAND _130_ (
    .A(we_b),
    .B(data_b[12]),
    .Y(_044_)
  );
  NOT _131_ (
    .A(_044_),
    .Y(_003_[12])
  );
  NAND _132_ (
    .A(we_b),
    .B(data_b[13]),
    .Y(_045_)
  );
  NOT _133_ (
    .A(_045_),
    .Y(_003_[13])
  );
  NAND _134_ (
    .A(we_b),
    .B(data_b[14]),
    .Y(_046_)
  );
  NOT _135_ (
    .A(_046_),
    .Y(_003_[14])
  );
  NAND _136_ (
    .A(we_b),
    .B(data_b[15]),
    .Y(_047_)
  );
  NOT _137_ (
    .A(_047_),
    .Y(_003_[15])
  );
  NAND _138_ (
    .A(we_b),
    .B(data_b[16]),
    .Y(_048_)
  );
  NOT _139_ (
    .A(_048_),
    .Y(_003_[16])
  );
  NAND _140_ (
    .A(we_b),
    .B(addr_b[0]),
    .Y(_049_)
  );
  NOT _141_ (
    .A(_049_),
    .Y(_002_[0])
  );
  NAND _142_ (
    .A(we_b),
    .B(addr_b[1]),
    .Y(_050_)
  );
  NOT _143_ (
    .A(_050_),
    .Y(_002_[1])
  );
  NAND _144_ (
    .A(we_b),
    .B(addr_b[2]),
    .Y(_051_)
  );
  NOT _145_ (
    .A(_051_),
    .Y(_002_[2])
  );
  NAND _146_ (
    .A(we_b),
    .B(addr_b[3]),
    .Y(_052_)
  );
  NOT _147_ (
    .A(_052_),
    .Y(_002_[3])
  );
  NAND _148_ (
    .A(we_b),
    .B(addr_b[4]),
    .Y(_053_)
  );
  NOT _149_ (
    .A(_053_),
    .Y(_002_[4])
  );
  NAND _150_ (
    .A(we_b),
    .B(addr_b[5]),
    .Y(_054_)
  );
  NOT _151_ (
    .A(_054_),
    .Y(_002_[5])
  );
  NAND _152_ (
    .A(data_a[0]),
    .B(we_a),
    .Y(_055_)
  );
  NOT _153_ (
    .A(_055_),
    .Y(_001_[0])
  );
  NAND _154_ (
    .A(we_a),
    .B(data_a[1]),
    .Y(_056_)
  );
  NOT _155_ (
    .A(_056_),
    .Y(_001_[1])
  );
  NAND _156_ (
    .A(we_a),
    .B(data_a[2]),
    .Y(_057_)
  );
  NOT _157_ (
    .A(_057_),
    .Y(_001_[2])
  );
  NAND _158_ (
    .A(we_a),
    .B(data_a[3]),
    .Y(_058_)
  );
  NOT _159_ (
    .A(_058_),
    .Y(_001_[3])
  );
  NAND _160_ (
    .A(we_a),
    .B(data_a[4]),
    .Y(_059_)
  );
  NOT _161_ (
    .A(_059_),
    .Y(_001_[4])
  );
  NAND _162_ (
    .A(we_a),
    .B(data_a[5]),
    .Y(_060_)
  );
  NOT _163_ (
    .A(_060_),
    .Y(_001_[5])
  );
  NAND _164_ (
    .A(we_a),
    .B(data_a[6]),
    .Y(_061_)
  );
  NOT _165_ (
    .A(_061_),
    .Y(_001_[6])
  );
  NAND _166_ (
    .A(we_a),
    .B(data_a[7]),
    .Y(_062_)
  );
  NOT _167_ (
    .A(_062_),
    .Y(_001_[7])
  );
  NAND _168_ (
    .A(we_a),
    .B(data_a[8]),
    .Y(_063_)
  );
  NOT _169_ (
    .A(_063_),
    .Y(_001_[8])
  );
  NAND _170_ (
    .A(we_a),
    .B(data_a[9]),
    .Y(_064_)
  );
  NOT _171_ (
    .A(_064_),
    .Y(_001_[9])
  );
  NAND _172_ (
    .A(we_a),
    .B(data_a[10]),
    .Y(_065_)
  );
  NOT _173_ (
    .A(_065_),
    .Y(_001_[10])
  );
  NAND _174_ (
    .A(we_a),
    .B(data_a[11]),
    .Y(_066_)
  );
  NOT _175_ (
    .A(_066_),
    .Y(_001_[11])
  );
  NAND _176_ (
    .A(we_a),
    .B(data_a[12]),
    .Y(_067_)
  );
  NOT _177_ (
    .A(_067_),
    .Y(_001_[12])
  );
  NAND _178_ (
    .A(we_a),
    .B(data_a[13]),
    .Y(_068_)
  );
  NOT _179_ (
    .A(_068_),
    .Y(_001_[13])
  );
  NAND _180_ (
    .A(we_a),
    .B(data_a[14]),
    .Y(_069_)
  );
  NOT _181_ (
    .A(_069_),
    .Y(_001_[14])
  );
  NAND _182_ (
    .A(we_a),
    .B(data_a[15]),
    .Y(_070_)
  );
  NOT _183_ (
    .A(_070_),
    .Y(_001_[15])
  );
  NAND _184_ (
    .A(we_a),
    .B(data_a[16]),
    .Y(_071_)
  );
  NOT _185_ (
    .A(_071_),
    .Y(_001_[16])
  );
  NAND _186_ (
    .A(_038_),
    .B(_022_),
    .Y(_072_)
  );
  NAND _187_ (
    .A(we_b),
    .B(data_b[0]),
    .Y(_073_)
  );
  NOT _188_ (
    .A(_073_),
    .Y(_003_[0])
  );
  NAND _189_ (
    .A(_072_),
    .B(_073_),
    .Y(_005_[0])
  );
  NAND _190_ (
    .A(_038_),
    .B(_029_),
    .Y(_074_)
  );
  NAND _191_ (
    .A(we_b),
    .B(data_b[1]),
    .Y(_075_)
  );
  NOT _192_ (
    .A(_075_),
    .Y(_003_[1])
  );
  NAND _193_ (
    .A(_074_),
    .B(_075_),
    .Y(_005_[1])
  );
  NAND _194_ (
    .A(_038_),
    .B(_030_),
    .Y(_076_)
  );
  NAND _195_ (
    .A(we_b),
    .B(data_b[2]),
    .Y(_077_)
  );
  NOT _196_ (
    .A(_077_),
    .Y(_003_[2])
  );
  NAND _197_ (
    .A(_076_),
    .B(_077_),
    .Y(_005_[2])
  );
  NAND _198_ (
    .A(_038_),
    .B(_031_),
    .Y(_078_)
  );
  NAND _199_ (
    .A(we_b),
    .B(data_b[3]),
    .Y(_079_)
  );
  NOT _200_ (
    .A(_079_),
    .Y(_003_[3])
  );
  NAND _201_ (
    .A(_078_),
    .B(_079_),
    .Y(_005_[3])
  );
  NAND _202_ (
    .A(_038_),
    .B(_032_),
    .Y(_080_)
  );
  NAND _203_ (
    .A(we_b),
    .B(data_b[4]),
    .Y(_081_)
  );
  NOT _204_ (
    .A(_081_),
    .Y(_003_[4])
  );
  NAND _205_ (
    .A(_080_),
    .B(_081_),
    .Y(_005_[4])
  );
  NAND _206_ (
    .A(_038_),
    .B(_033_),
    .Y(_082_)
  );
  NAND _207_ (
    .A(we_b),
    .B(data_b[5]),
    .Y(_083_)
  );
  NOT _208_ (
    .A(_083_),
    .Y(_003_[5])
  );
  NAND _209_ (
    .A(_082_),
    .B(_083_),
    .Y(_005_[5])
  );
  NAND _210_ (
    .A(_038_),
    .B(_034_),
    .Y(_084_)
  );
  NAND _211_ (
    .A(we_b),
    .B(data_b[6]),
    .Y(_085_)
  );
  NOT _212_ (
    .A(_085_),
    .Y(_003_[6])
  );
  NAND _213_ (
    .A(_084_),
    .B(_085_),
    .Y(_005_[6])
  );
  NAND _214_ (
    .A(_038_),
    .B(_035_),
    .Y(_086_)
  );
  NAND _215_ (
    .A(we_b),
    .B(data_b[7]),
    .Y(_087_)
  );
  NOT _216_ (
    .A(_087_),
    .Y(_003_[7])
  );
  NAND _217_ (
    .A(_086_),
    .B(_087_),
    .Y(_005_[7])
  );
  NAND _218_ (
    .A(_038_),
    .B(_036_),
    .Y(_088_)
  );
  NAND _219_ (
    .A(_040_),
    .B(_088_),
    .Y(_005_[8])
  );
  NAND _220_ (
    .A(_038_),
    .B(_037_),
    .Y(_089_)
  );
  NAND _221_ (
    .A(_041_),
    .B(_089_),
    .Y(_005_[9])
  );
  NAND _222_ (
    .A(_038_),
    .B(_023_),
    .Y(_090_)
  );
  NAND _223_ (
    .A(_042_),
    .B(_090_),
    .Y(_005_[10])
  );
  NAND _224_ (
    .A(_038_),
    .B(_024_),
    .Y(_091_)
  );
  NAND _225_ (
    .A(_043_),
    .B(_091_),
    .Y(_005_[11])
  );
  NAND _226_ (
    .A(_038_),
    .B(_025_),
    .Y(_092_)
  );
  NAND _227_ (
    .A(_044_),
    .B(_092_),
    .Y(_005_[12])
  );
  NAND _228_ (
    .A(_038_),
    .B(_026_),
    .Y(_093_)
  );
  NAND _229_ (
    .A(_045_),
    .B(_093_),
    .Y(_005_[13])
  );
  NAND _230_ (
    .A(_038_),
    .B(_027_),
    .Y(_094_)
  );
  NAND _231_ (
    .A(_046_),
    .B(_094_),
    .Y(_005_[14])
  );
  NAND _232_ (
    .A(_038_),
    .B(_028_),
    .Y(_095_)
  );
  NAND _233_ (
    .A(_047_),
    .B(_095_),
    .Y(_005_[15])
  );
  NAND _234_ (
    .A(we_a),
    .B(addr_a[0]),
    .Y(_096_)
  );
  NOT _235_ (
    .A(_096_),
    .Y(_000_[0])
  );
  NAND _236_ (
    .A(we_a),
    .B(addr_a[1]),
    .Y(_097_)
  );
  NOT _237_ (
    .A(_097_),
    .Y(_000_[1])
  );
  NAND _238_ (
    .A(we_a),
    .B(addr_a[2]),
    .Y(_098_)
  );
  NOT _239_ (
    .A(_098_),
    .Y(_000_[2])
  );
  NAND _240_ (
    .A(we_a),
    .B(addr_a[3]),
    .Y(_099_)
  );
  NOT _241_ (
    .A(_099_),
    .Y(_000_[3])
  );
  NAND _242_ (
    .A(we_a),
    .B(addr_a[4]),
    .Y(_100_)
  );
  NOT _243_ (
    .A(_100_),
    .Y(_000_[4])
  );
  NAND _244_ (
    .A(we_a),
    .B(addr_a[5]),
    .Y(_101_)
  );
  NOT _245_ (
    .A(_101_),
    .Y(_000_[5])
  );
  NAND _246_ (
    .A(_039_),
    .B(_006_),
    .Y(_102_)
  );
  NAND _247_ (
    .A(_055_),
    .B(_102_),
    .Y(_004_[0])
  );
  NAND _248_ (
    .A(_039_),
    .B(_013_),
    .Y(_103_)
  );
  NAND _249_ (
    .A(_056_),
    .B(_103_),
    .Y(_004_[1])
  );
  NAND _250_ (
    .A(_039_),
    .B(_014_),
    .Y(_104_)
  );
  NAND _251_ (
    .A(_057_),
    .B(_104_),
    .Y(_004_[2])
  );
  NAND _252_ (
    .A(_039_),
    .B(_015_),
    .Y(_105_)
  );
  NAND _253_ (
    .A(_058_),
    .B(_105_),
    .Y(_004_[3])
  );
  NAND _254_ (
    .A(_039_),
    .B(_016_),
    .Y(_106_)
  );
  NAND _255_ (
    .A(_059_),
    .B(_106_),
    .Y(_004_[4])
  );
  NAND _256_ (
    .A(_039_),
    .B(_017_),
    .Y(_107_)
  );
  NAND _257_ (
    .A(_060_),
    .B(_107_),
    .Y(_004_[5])
  );
  NAND _258_ (
    .A(_039_),
    .B(_018_),
    .Y(_108_)
  );
  NAND _259_ (
    .A(_061_),
    .B(_108_),
    .Y(_004_[6])
  );
  NAND _260_ (
    .A(_039_),
    .B(_019_),
    .Y(_109_)
  );
  NAND _261_ (
    .A(_062_),
    .B(_109_),
    .Y(_004_[7])
  );
  NAND _262_ (
    .A(_039_),
    .B(_020_),
    .Y(_110_)
  );
  NAND _263_ (
    .A(_063_),
    .B(_110_),
    .Y(_004_[8])
  );
  NAND _264_ (
    .A(_039_),
    .B(_021_),
    .Y(_111_)
  );
  NAND _265_ (
    .A(_064_),
    .B(_111_),
    .Y(_004_[9])
  );
  NAND _266_ (
    .A(_039_),
    .B(_007_),
    .Y(_112_)
  );
  NAND _267_ (
    .A(_065_),
    .B(_112_),
    .Y(_004_[10])
  );
  NAND _268_ (
    .A(_039_),
    .B(_008_),
    .Y(_113_)
  );
  NAND _269_ (
    .A(_066_),
    .B(_113_),
    .Y(_004_[11])
  );
  NAND _270_ (
    .A(_039_),
    .B(_009_),
    .Y(_114_)
  );
  NAND _271_ (
    .A(_067_),
    .B(_114_),
    .Y(_004_[12])
  );
  NAND _272_ (
    .A(_039_),
    .B(_010_),
    .Y(_115_)
  );
  NAND _273_ (
    .A(_068_),
    .B(_115_),
    .Y(_004_[13])
  );
  NAND _274_ (
    .A(_039_),
    .B(_011_),
    .Y(_116_)
  );
  NAND _275_ (
    .A(_069_),
    .B(_116_),
    .Y(_004_[14])
  );
  NAND _276_ (
    .A(_039_),
    .B(_012_),
    .Y(_117_)
  );
  NAND _277_ (
    .A(_070_),
    .B(_117_),
    .Y(_004_[15])
  );
  (* src = "design.sv:23" *)
  DFF _278_ (
    .C(clk),
    .D(_005_[0]),
    .Q(q_b[0])
  );
  (* src = "design.sv:23" *)
  DFF _279_ (
    .C(clk),
    .D(_005_[1]),
    .Q(q_b[1])
  );
  (* src = "design.sv:23" *)
  DFF _280_ (
    .C(clk),
    .D(_005_[2]),
    .Q(q_b[2])
  );
  (* src = "design.sv:23" *)
  DFF _281_ (
    .C(clk),
    .D(_005_[3]),
    .Q(q_b[3])
  );
  (* src = "design.sv:23" *)
  DFF _282_ (
    .C(clk),
    .D(_005_[4]),
    .Q(q_b[4])
  );
  (* src = "design.sv:23" *)
  DFF _283_ (
    .C(clk),
    .D(_005_[5]),
    .Q(q_b[5])
  );
  (* src = "design.sv:23" *)
  DFF _284_ (
    .C(clk),
    .D(_005_[6]),
    .Q(q_b[6])
  );
  (* src = "design.sv:23" *)
  DFF _285_ (
    .C(clk),
    .D(_005_[7]),
    .Q(q_b[7])
  );
  (* src = "design.sv:23" *)
  DFF _286_ (
    .C(clk),
    .D(_005_[8]),
    .Q(q_b[8])
  );
  (* src = "design.sv:23" *)
  DFF _287_ (
    .C(clk),
    .D(_005_[9]),
    .Q(q_b[9])
  );
  (* src = "design.sv:23" *)
  DFF _288_ (
    .C(clk),
    .D(_005_[10]),
    .Q(q_b[10])
  );
  (* src = "design.sv:23" *)
  DFF _289_ (
    .C(clk),
    .D(_005_[11]),
    .Q(q_b[11])
  );
  (* src = "design.sv:23" *)
  DFF _290_ (
    .C(clk),
    .D(_005_[12]),
    .Q(q_b[12])
  );
  (* src = "design.sv:23" *)
  DFF _291_ (
    .C(clk),
    .D(_005_[13]),
    .Q(q_b[13])
  );
  (* src = "design.sv:23" *)
  DFF _292_ (
    .C(clk),
    .D(_005_[14]),
    .Q(q_b[14])
  );
  (* src = "design.sv:23" *)
  DFF _293_ (
    .C(clk),
    .D(_005_[15]),
    .Q(q_b[15])
  );
  (* src = "design.sv:11" *)
  DFF _294_ (
    .C(clk),
    .D(_004_[0]),
    .Q(q_a[0])
  );
  (* src = "design.sv:11" *)
  DFF _295_ (
    .C(clk),
    .D(_004_[1]),
    .Q(q_a[1])
  );
  (* src = "design.sv:11" *)
  DFF _296_ (
    .C(clk),
    .D(_004_[2]),
    .Q(q_a[2])
  );
  (* src = "design.sv:11" *)
  DFF _297_ (
    .C(clk),
    .D(_004_[3]),
    .Q(q_a[3])
  );
  (* src = "design.sv:11" *)
  DFF _298_ (
    .C(clk),
    .D(_004_[4]),
    .Q(q_a[4])
  );
  (* src = "design.sv:11" *)
  DFF _299_ (
    .C(clk),
    .D(_004_[5]),
    .Q(q_a[5])
  );
  (* src = "design.sv:11" *)
  DFF _300_ (
    .C(clk),
    .D(_004_[6]),
    .Q(q_a[6])
  );
  (* src = "design.sv:11" *)
  DFF _301_ (
    .C(clk),
    .D(_004_[7]),
    .Q(q_a[7])
  );
  (* src = "design.sv:11" *)
  DFF _302_ (
    .C(clk),
    .D(_004_[8]),
    .Q(q_a[8])
  );
  (* src = "design.sv:11" *)
  DFF _303_ (
    .C(clk),
    .D(_004_[9]),
    .Q(q_a[9])
  );
  (* src = "design.sv:11" *)
  DFF _304_ (
    .C(clk),
    .D(_004_[10]),
    .Q(q_a[10])
  );
  (* src = "design.sv:11" *)
  DFF _305_ (
    .C(clk),
    .D(_004_[11]),
    .Q(q_a[11])
  );
  (* src = "design.sv:11" *)
  DFF _306_ (
    .C(clk),
    .D(_004_[12]),
    .Q(q_a[12])
  );
  (* src = "design.sv:11" *)
  DFF _307_ (
    .C(clk),
    .D(_004_[13]),
    .Q(q_a[13])
  );
  (* src = "design.sv:11" *)
  DFF _308_ (
    .C(clk),
    .D(_004_[14]),
    .Q(q_a[14])
  );
  (* src = "design.sv:11" *)
  DFF _309_ (
    .C(clk),
    .D(_004_[15]),
    .Q(q_a[15])
  );
  reg [16:0] ram [64:0];
  always @(posedge clk) begin
    if (we_a) ram[{ 1'h0, _000_[5:0] }] <= _001_;
    if (we_b) ram[{ 1'h0, _002_[5:0] }] <= _003_;
  end
  assign { _118_[16], _012_, _011_, _010_, _009_, _008_, _007_, _021_, _020_, _019_, _018_, _017_, _016_, _015_, _014_, _013_, _006_ } = ram[{ 1'h0, addr_a }];
  assign { _119_[16], _028_, _027_, _026_, _025_, _024_, _023_, _037_, _036_, _035_, _034_, _033_, _032_, _031_, _030_, _029_, _022_ } = ram[{ 1'h0, addr_b }];
  assign _000_[6] = 1'h0;
  assign _002_[6] = 1'h0;
  assign _118_[15:0] = { _012_, _011_, _010_, _009_, _008_, _007_, _021_, _020_, _019_, _018_, _017_, _016_, _015_, _014_, _013_, _006_ };
  assign _119_[15:0] = { _028_, _027_, _026_, _025_, _024_, _023_, _037_, _036_, _035_, _034_, _033_, _032_, _031_, _030_, _029_, _022_ };
endmodule
