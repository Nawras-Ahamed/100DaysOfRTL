$date
	Sun Jul  9 15:58:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fsm_serial_adder_tb $end
$var wire 1 ! Cout $end
$var wire 1 " sum $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$scope module DUT $end
$var wire 1 ' A $end
$var wire 1 ( B $end
$var wire 1 ! Cout $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 " sum $end
$var reg 2 + next_state [1:0] $end
$var reg 2 , present_state [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ,
b0 +
1*
0)
0(
0'
1&
0%
0$
0#
x"
x!
$end
#5
0"
0!
b0 ,
1%
1)
#10
b1 +
0%
0)
1#
1'
0&
0*
#15
1"
b1 ,
1%
1)
#20
b10 +
0%
0)
1$
1(
#25
0"
1!
b11 +
b10 ,
1%
1)
#30
b1 +
0%
0)
0$
0(
0#
0'
#35
1"
0!
b0 +
b1 ,
1%
1)
#40
b10 +
0%
0)
1$
1(
1#
1'
#45
0"
1!
b11 +
b10 ,
1%
1)
#50
b10 +
0%
0)
0#
0'
#55
1%
1)
#60
b11 +
0%
0)
1#
1'
#65
1"
b11 ,
1%
1)
#70
b10 +
0%
0)
0#
0'
#75
0"
b10 ,
1%
1)
#80
0%
0)
