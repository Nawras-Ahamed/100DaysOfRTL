$date
	Tue May  2 14:17:55 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CLA_TB $end
$var wire 1 ! Cout $end
$var wire 4 " S [3:0] $end
$var wire 5 # add [4:0] $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & Cin $end
$scope module cla $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 4 ) Ci [3:0] $end
$var wire 1 * Cin $end
$var wire 1 ! Cout $end
$var wire 4 + S [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 +
0*
b0 )
b0 (
b1 '
0&
b0 %
b1 $
b1 #
b1 "
0!
$end
#100000
b111 #
b111 "
b111 +
1&
b1 )
1*
b100 %
b100 (
b10 $
b10 '
#150000
1!
b10001 #
b1 "
b1 +
0&
b1100 )
0*
b110 %
b110 (
b1011 $
b1011 '
#200000
0!
b1001 #
b1001 "
b1001 +
1&
b1111 )
1*
b11 %
b11 (
b101 $
b101 '
#250000
0!
b1111 #
b1111 "
b1111 +
0&
b0 )
0*
b1001 %
b1001 (
b110 $
b110 '
#300000
b1010 #
b1010 "
b1010 +
b10 %
b10 (
b1000 $
b1000 '
#350000
b1011 #
b1011 "
b1011 +
1&
b1 )
1*
#400000
1!
b11 )
b10011 #
b11 "
b11 +
b1001 %
b1001 (
b1001 $
b1001 '
#450000
